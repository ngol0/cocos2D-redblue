{"version":3,"sources":["file:///Users/lamngo/Desktop/Cocos/RedandBlue_edited/assets/Script/InteractiveObjects/PoolObjects.ts"],"names":["_decorator","Component","Collider2D","Contact2DType","Vec3","ccclass","property","PoolObjects","SetPool","pool","_pool","OnObjectOut","object","undefined","put","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","Moving","deltaTime","_currentPos","node","position","x","y","z","speed","movingDirection","BackToPool","_isHit"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,U,OAAAA,U;AAAsBC,MAAAA,a,OAAAA,a;AAAkCC,MAAAA,I,OAAAA,I;;;;;;;OACxF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;6BAGRO,W,WADrBF,OAAO,CAAC,aAAD,C,oCAAR,MACsBE,WADtB,SAC0CN,SAD1C,CACoD;AAAA;AAAA;;AAAA;;AAAA,0CAGpB,KAHoB;;AAAA;;AAAA;;AAAA;AAAA;;AAYhDO,QAAAA,OAAO,CAACC,IAAD,EAAO;AACV,eAAKC,KAAL,GAAaD,IAAb;AACH;;AAEDE,QAAAA,WAAW,CAACC,MAAD,EACX;AACI,cAAI,KAAKF,KAAL,KAAeG,SAAnB,EACA;AACI,iBAAKH,KAAL,CAAWI,GAAX,CAAeF,MAAf;AACH;AACJ;;AAEDG,QAAAA,KAAK,GAAI;AACL;AACA,cAAIC,QAAQ,GAAG,KAAKC,YAAL,CAAkBf,UAAlB,CAAf;;AACA,cAAIc,QAAJ,EAAc;AACVA,YAAAA,QAAQ,CAACE,EAAT,CAAYf,aAAa,CAACgB,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AACH;AACJ;;AAKDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKC,WAAL,GAAmB,IAAInB,IAAJ,CAAS,KAAKoB,IAAL,CAAUC,QAAV,CAAmBC,CAA5B,EAA+B,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,CAAlD,EAAqD,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,CAAxE,CAAnB;AACA,eAAKL,WAAL,CAAiBI,CAAjB,IAAsB,KAAKE,KAAL,GAAa,KAAKC,eAAlB,GAAoCR,SAA1D;AACA,eAAKE,IAAL,CAAUC,QAAV,GAAqB,KAAKF,WAA1B;AACH;;AAEDQ,QAAAA,UAAU,GAAG;AACT,eAAKpB,WAAL,CAAiB,KAAKa,IAAtB;AACA,eAAKQ,MAAL,GAAc,KAAd;AACH;;AA5C+C,O,0FAM/C1B,Q;;;;;iBACmC,C;;gFAEnCA,Q;;;;;iBACyB,G","sourcesContent":["\nimport { _decorator, Component, Node, Collider2D, NodePool, Contact2DType, IPhysics2DContact, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n \n@ccclass('PoolObjects')\nexport abstract class PoolObjects extends Component {\n\n    protected _pool: NodePool;\n    protected _isHit: boolean = false;\n    protected _currentPos: Vec3;\n\n    @property\n    protected movingDirection: number = 1;\n\n    @property\n    protected speed: number = 400;\n\n    SetPool(pool) {\n        this._pool = pool;\n    }\n\n    OnObjectOut(object: Node)\n    {\n        if (this._pool !== undefined)\n        {\n            this._pool.put(object);\n        }\n    }\n\n    start () {\n        //collider\n        let collider = this.getComponent(Collider2D);\n        if (collider) {\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        }\n    }\n\n    abstract onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null);\n\n\n    Moving(deltaTime: number) {\n        this._currentPos = new Vec3(this.node.position.x, this.node.position.y, this.node.position.z);\n        this._currentPos.y -= this.speed * this.movingDirection * deltaTime;\n        this.node.position = this._currentPos;\n    }\n\n    BackToPool() {       \n        this.OnObjectOut(this.node);\n        this._isHit = false;\n    }\n}\n"]}