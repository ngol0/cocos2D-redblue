{"version":3,"sources":["file:///Users/lamngo/Desktop/ATHENA/red-and-blue/assets/Script/GameManager.ts"],"names":["_decorator","Component","Node","RichText","director","ProgressBar","ccclass","property","GameManager","type","start","Instance","score","string","myScore","toString","AddScore","addedScore","AddProgressBar","timerBar","progress","colorScore","CheckScoreForColorChangeing","LoadGame","loadScene","count","colorChange","PlayerBlueInside","active","PlayerRedInside","isRed","isBlue"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,Q,OAAAA,Q;AAA2CC,MAAAA,W,OAAAA,W;;;;;;;OACrF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;6BAIjBQ,W,WADZF,OAAO,CAAC,aAAD,C,UAKHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEN;AAAP,OAAD,C,UAGRI,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,UAGRK,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,UAcRK,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEJ;AAAR,OAAD,C,8CAzBb,MACaG,WADb,SACiCP,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,+CAcR,EAdQ;;AAAA,6CAeX,KAfW;;AAAA,+CAmBT,KAnBS;;AAAA,yCAoBhB,CApBgB;;AAAA,yCAqBf,KArBe;;AAAA,0CAsBd,IAtBc;;AAAA;;AAAA;;AAAA;AAAA;;AAgCvCS,QAAAA,KAAK,GAAI;AACLF,UAAAA,WAAW,CAACG,QAAZ,GAAuB,IAAvB;AACA,eAAKC,KAAL,CAAWC,MAAX,GAAoB,KAAKC,OAAL,CAAaC,QAAb,EAApB;AAEH;;AAEDC,QAAAA,QAAQ,CAACC,UAAD,EACR;AACI,eAAKH,OAAL,IAAeG,UAAf;AACA,eAAKL,KAAL,CAAWC,MAAX,GAAoB,KAAKC,OAAL,CAAaC,QAAb,EAApB,CAFJ,CAGI;;AAEA,iBAAO,KAAKD,OAAZ;AACH;;AAEDI,QAAAA,cAAc,GACd;AACI,eAAKC,QAAL,CAAcC,QAAd,IAA0B,IAA1B;AACA,eAAKC,UAAL,GAAkB,KAAKF,QAAL,CAAcC,QAAhC,CAFJ,CAGI;;AACA,eAAKE,2BAAL,CAAiC,KAAKD,UAAtC;AACH;;AAEDE,QAAAA,QAAQ,GACR;AACInB,UAAAA,QAAQ,CAACoB,SAAT,CAAmB,MAAnB;AACH,SA1DsC,CA4DvC;;;AACAF,QAAAA,2BAA2B,CAACV,KAAD,EAC3B;AACI,cAAIA,KAAK,IAAI,CAAT,IAAc,KAAKa,KAAL,GAAa,CAAb,IAAkB,CAApC,EAAuC;AACvC;AACI,mBAAKC,WAAL,GAAmB,IAAnB;AACA,mBAAKC,gBAAL,CAAsBC,MAAtB,GAA+B,KAA/B;AACA,mBAAKC,eAAL,CAAqBD,MAArB,GAA8B,IAA9B;AACA,mBAAKH,KAAL;AACA,mBAAKN,QAAL,CAAcC,QAAd,GAAyB,CAAzB;AACA,mBAAKU,KAAL,GAAa,IAAb;AACA,mBAAKC,MAAL,GAAc,KAAd;AACH,aATD,MAWK,IAAInB,KAAK,IAAI,CAAT,IAAc,KAAKa,KAAL,GAAa,CAAb,IAAkB,CAApC,EAAuC;AAC5C;AACI,mBAAKC,WAAL,GAAmB,KAAnB;AACA,mBAAKC,gBAAL,CAAsBC,MAAtB,GAA+B,IAA/B;AACA,mBAAKC,eAAL,CAAqBD,MAArB,GAA8B,KAA9B;AACA,mBAAKH,KAAL;AACA,mBAAKN,QAAL,CAAcC,QAAd,GAAyB,CAAzB;AACA,mBAAKU,KAAL,GAAa,KAAb;AACA,mBAAKC,MAAL,GAAc,IAAd;AACH;AAEJ;;AArFsC,O,uCACD,I;;;;;iBAIR,I;;;;;;;iBAGO,I;;;;;;;iBAGD,I;;;;;;;kFAgBnCxB,Q;;;;;iBACgB,C","sourcesContent":["\nimport { _decorator, Component, Node, RichText, director, find, Prefab, instantiate, Vec3, ProgressBar } from 'cc';\nconst { ccclass, property } = _decorator;\n\n \n@ccclass('GameManager')\nexport class GameManager extends Component {\n    public static Instance: GameManager = null;\n\n    //----FOR GAMEPLAY-----//\n    @property({type: RichText})\n    public score: RichText|null = null;\n\n    @property({type: Node})\n    public PlayerBlueInside: Node|null = null;\n\n    @property({type: Node})\n    public PlayerRedInside: Node|null = null;\n\n    //not sure what are these?\n    public arrayOfTime: number[] = []; \n    public isChecked: boolean = false;\n    //\n\n    //for color changing\n    public colorChange: boolean = false;\n    public count: number = 2;\n    public isRed: boolean = false;\n    public isBlue: boolean = true;\n\n    @property({ type: ProgressBar })\n    public timerBar: ProgressBar;\n\n    @property\n    public myScore = 0;\n\n    private colorScore: number;\n\n    start () {\n        GameManager.Instance = this;\n        this.score.string = this.myScore.toString();\n\n    }\n\n    AddScore(addedScore: number) \n    {\n        this.myScore+= addedScore;\n        this.score.string = this.myScore.toString();\n        //console.log(this.myScore);\n        \n        return this.myScore;\n    }\n\n    AddProgressBar()\n    {\n        this.timerBar.progress += 0.05;\n        this.colorScore = this.timerBar.progress;\n        // console.log(this.colorScore);\n        this.CheckScoreForColorChangeing(this.colorScore);\n    }\n\n    LoadGame()\n    {\n        director.loadScene(\"main\");\n    }\n\n    //changing player's color\n    CheckScoreForColorChangeing(score: number)\n    {\n        if (score >= 1 && this.count % 2 == 0) //red active\n        {\n            this.colorChange = true;\n            this.PlayerBlueInside.active = false;\n            this.PlayerRedInside.active = true;\n            this.count++;\n            this.timerBar.progress = 0;\n            this.isRed = true;\n            this.isBlue = false;\n        }  \n\n        else if (score >= 1 && this.count % 2 != 0) //blue active\n        {\n            this.colorChange = false;\n            this.PlayerBlueInside.active = true;\n            this.PlayerRedInside.active = false;\n            this.count++;\n            this.timerBar.progress = 0;\n            this.isRed = false;\n            this.isBlue = true;\n        }\n    \n    }\n}\n\n"]}