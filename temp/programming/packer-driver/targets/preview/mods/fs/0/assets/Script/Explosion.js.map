{"version":3,"sources":["file:///Users/lamngo/Desktop/ATHENA/red-and-blue/assets/Script/Explosion.ts"],"names":["_decorator","Component","Vec3","ccclass","property","Explosion","start","Instace","_startingPos","node","position","x","y","z","SetActiveDamage","isDamage","update","deltaTime","_curactiveTime","_activeTime"],"mappings":";;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA+DC,MAAAA,I,OAAAA,I;;;;;;;OAC9E;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;2BAGjBK,S,WADZF,OAAO,CAAC,WAAD,C,mCAAR,MACaE,SADb,SAC+BJ,SAD/B,CACyC;AAAA;AAAA;;AAAA,kDAIJ,CAJI;;AAAA,+CAKP,GALO;;AAAA,4CAOT,KAPS;;AAAA;AAAA;;AAYrCK,QAAAA,KAAK,GACL;AACID,UAAAA,SAAS,CAACE,OAAV,GAAoB,IAApB;AAEA,eAAKC,YAAL,GAAoB,IAAIN,IAAJ,CAAS,KAAKO,IAAL,CAAUC,QAAV,CAAmBC,CAA5B,EAA+B,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,CAAlD,EAAqD,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,CAAxE,CAApB;AACH;;AAEDC,QAAAA,eAAe,GACf;AACI,eAAKC,QAAL,GAAgB,IAAhB;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EACN;AACI,cAAI,KAAKF,QAAT,EACA;AACI,iBAAKN,IAAL,CAAUC,QAAV,GAAqB,IAAIR,IAAJ,CAAS,CAAC,EAAV,EAAc,GAAd,EAAmB,CAAnB,CAArB;AAEA,iBAAKgB,cAAL,IAAuBD,SAAvB;;AAEA,gBAAI,KAAKC,cAAL,GAAsB,KAAKC,WAA/B,EACA;AACI,mBAAKV,IAAL,CAAUC,QAAV,GAAqB,KAAKF,YAA1B;AACA,mBAAKU,cAAL,GAAsB,CAAtB;AACA,mBAAKH,QAAL,GAAgB,KAAhB;AACH;AACJ;AACJ;;AAvCoC,O,sCAEF,I","sourcesContent":["\nimport { _decorator, Component, Node, Collider2D, Contact2DType, IPhysics2DContact, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n \n@ccclass('Explosion')\nexport class Explosion extends Component {\n\n    public static Instace: Explosion = null;\n\n    private _curactiveTime: number = 0;\n    private _activeTime: number = 0.1;\n\n    private isDamage: boolean = false;\n\n    private _startingPos: Vec3;\n\n\n    start()\n    {\n        Explosion.Instace = this;\n\n        this._startingPos = new Vec3(this.node.position.x, this.node.position.y, this.node.position.z);\n    }\n\n    SetActiveDamage()\n    {\n        this.isDamage = true;\n    }\n\n    update(deltaTime: number)\n    {\n        if (this.isDamage)\n        {\n            this.node.position = new Vec3(-50, 400, 0);\n\n            this._curactiveTime += deltaTime;\n\n            if (this._curactiveTime > this._activeTime)\n            {\n                this.node.position = this._startingPos;\n                this._curactiveTime = 0;\n                this.isDamage = false;\n            }\n        }\n    }\n}\n"]}