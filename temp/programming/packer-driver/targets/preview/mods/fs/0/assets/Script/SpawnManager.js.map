{"version":3,"sources":["file:///Users/lamngo/Desktop/Cocos/RedandBlue_1/assets/Script/SpawnManager.ts"],"names":["_decorator","Component","PoolManager","ccclass","property","SpawnManager","Math","random","start","update","deltaTime","redCurSpawnTime","stoneCurSpawnTime","redTimeBetweenSpawn","Instance","createRedEnemy","node","stoneTimeBetweenSpawn","createStoneEnemy"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACZC,MAAAA,W,iBAAAA,W;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;8BAGjBK,Y,WADZF,OAAO,CAAC,cAAD,C,yBAAR,MACaE,YADb,SACkCJ,SADlC,CAC4C;AAAA;AAAA;;AAAA,uDAEVK,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,CAFX;;AAAA,yDAGRD,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,EAHb;;AAAA,mDAKd,CALc;;AAAA,qDAMZ,CANY;AAAA;;AAQxC;AACA;AAEAC,QAAAA,KAAK,GAAI,CAER;;AAEDC,QAAAA,MAAM,CAAEC,SAAF,EAAqB;AAEvB;AACA,eAAKC,eAAL,IAAwBD,SAAxB;AACA,eAAKE,iBAAL,IAA0BF,SAA1B,CAJuB,CAKvB;;AACA,cAAI,KAAKC,eAAL,GAAuB,KAAKE,mBAAhC,EACA;AACI;AAAA;AAAA,4CAAYC,QAAZ,CAAqBC,cAArB,CAAoC,KAAKC,IAAzC;AACA,iBAAKL,eAAL,GAAuB,CAAvB,CAFJ,CAGI;AACH,WAXsB,CAavB;;;AACA,cAAI,KAAKC,iBAAL,GAAyB,KAAKK,qBAAlC,EACA;AACI;AAAA;AAAA,4CAAYH,QAAZ,CAAqBI,gBAArB,CAAsC,KAAKF,IAA3C;AACA,iBAAKJ,iBAAL,GAAyB,CAAzB,CAFJ,CAGI;AACH;AACJ;;AAnCuC,O","sourcesContent":["\nimport { _decorator, Component, Node, macro, EventKeyboard, SystemEventType, systemEvent, Vec3 } from 'cc';\nimport { PoolManager } from './PoolManager';\n\nconst { ccclass, property } = _decorator;\n \n@ccclass('SpawnManager')\nexport class SpawnManager extends Component {\n\n    redTimeBetweenSpawn: number = Math.random() * 10 + 3;\n    stoneTimeBetweenSpawn: number = Math.random() * 13 + 10;\n\n    redCurSpawnTime: number = 0;   \n    stoneCurSpawnTime: number = 0;\n\n    // redSpawning: boolean = true;\n    // stoneSpawning: boolean = false;\n\n    start () {\n        \n    }\n\n    update (deltaTime: number) {\n\n        //spawn obstacles, one after the other\n        this.redCurSpawnTime += deltaTime;\n        this.stoneCurSpawnTime += deltaTime;\n        //spawn red first // --TODO: RECALCULATE SPAWN TIME--\n        if (this.redCurSpawnTime > this.redTimeBetweenSpawn)\n        {\n            PoolManager.Instance.createRedEnemy(this.node);\n            this.redCurSpawnTime = 0;\n            //this.redTimeBetweenSpawn = Math.random() * 10 + 3;\n        }\n\n        //then spawn stone obstacles, then repeat\n        if (this.stoneCurSpawnTime > this.stoneTimeBetweenSpawn)\n        {\n            PoolManager.Instance.createStoneEnemy(this.node);\n            this.stoneCurSpawnTime = 0;\n            //this.stoneTimeBetweenSpawn = Math.random() * 13 + 10;\n        }\n    }\n}\n\n"]}