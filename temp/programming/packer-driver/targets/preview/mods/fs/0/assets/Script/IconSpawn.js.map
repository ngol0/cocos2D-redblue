{"version":3,"sources":["file:///Users/lamngo/Desktop/Cocos/RedandBlue_edited/assets/Script/IconSpawn.ts"],"names":["_decorator","Component","Vec3","ccclass","property","IconSpawn","start","arrayOfPositionToSpawn","update","deltaTime","curSpawnTime","respawn","pos","node","position","x","y","z","Math","floor","random","length","height","spawnTime","currentPos","speed","offScreen","Respawn"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;;;;;;;OAChC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;2BAGjBK,S,WADZF,OAAO,CAAC,WAAD,C,oCAAR,MACaE,SADb,SAC+BJ,SAD/B,CACyC;AAAA;AAAA;;AAAA,0DAEM,EAFN;;AAAA;;AAAA,0CAMZ,IANY;;AAAA;;AAAA,6CAQT,CAAC,GARQ;;AAAA,yCAWb,GAXa;;AAAA,gDAcN,CAdM;;AAAA;;AAAA,2CAmBV,KAnBU;AAAA;;AAsBrCK,QAAAA,KAAK,GAAI;AACJ;AACA,eAAKC,sBAAL,GAA8B,CAAC,CAAC,GAAF,EAAO,CAAC,GAAR,EAAa,CAAC,GAAd,EAAmB,CAAC,EAApB,EAAwB,EAAxB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,CAA9B;AACJ;;AAEDC,QAAAA,MAAM,CAAEC,SAAF,EAAqB;AAEvB,eAAKC,YAAL,IAAqBD,SAArB;;AAEA,cAAI,KAAKE,OAAT,EACA;AACI,iBAAKC,GAAL,GAAW,IAAIV,IAAJ,CAAU,KAAKW,IAAL,CAAUC,QAAV,CAAmBC,CAA7B,EAAgC,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,CAAnD,EAAsD,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,CAAzE,CAAX;AACA,iBAAKL,GAAL,CAASG,CAAT,GAAa,KAAKR,sBAAL,CAA4BW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKb,sBAAL,CAA4Bc,MAAvD,CAA5B,CAAb;AACA,iBAAKT,GAAL,CAASI,CAAT,GAAa,KAAKM,MAAlB;AACA,iBAAKT,IAAL,CAAUC,QAAV,GAAqB,KAAKF,GAA1B;AAEA,iBAAKD,OAAL,GAAe,KAAf;AACA,iBAAKD,YAAL,GAAoB,CAApB;AACH;;AAED,cAAI,KAAKA,YAAL,GAAoB,KAAKa,SAA7B,EACA;AACI,iBAAKC,UAAL,GAAkB,IAAItB,IAAJ,CAAU,KAAKW,IAAL,CAAUC,QAAV,CAAmBC,CAA7B,EAAgC,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,CAAnD,EAAsD,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,CAAzE,CAAlB;AACA,iBAAKO,UAAL,CAAgBR,CAAhB,IAAqB,KAAKS,KAAL,GAAahB,SAAlC;AACA,iBAAKI,IAAL,CAAUC,QAAV,GAAqB,KAAKU,UAA1B;;AAEA,gBAAI,KAAKA,UAAL,CAAgBR,CAAhB,GAAoB,KAAKU,SAA7B,EACA;AACI,mBAAKC,OAAL;AACA,mBAAKjB,YAAL,GAAoB,CAApB;AACA,mBAAKa,SAAL,IAAgB,CAAhB;AACH;AACJ;AACJ;;AAEDI,QAAAA,OAAO,GACP;AACI,eAAKhB,OAAL,GAAe,IAAf;AACH;;AA5DoC,O,oFAgBpCP,Q;;;;;iBACmB,E","sourcesContent":["\nimport { _decorator, Component, Node, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n \n@ccclass('IconSpawn')\nexport class IconSpawn extends Component {\n    //array of position\n    private arrayOfPositionToSpawn: number[] = [];\n\n    //pos\n    private pos: Vec3;\n    private height: number = 1300;\n    private currentPos: Vec3;\n    private offScreen: number = -650;\n\n    //falling vars\n    private speed: number = 350;\n\n    //spawning vars\n    private curSpawnTime: number = 0;\n\n    @property\n    spawnTime: number = 10;\n    \n    private respawn: boolean = false;\n\n\n    start () {\n         //create array\n         this.arrayOfPositionToSpawn = [-350, -250, -150, -50, 50, 150, 250, 350];\n    }\n\n    update (deltaTime: number) {\n\n        this.curSpawnTime += deltaTime;\n\n        if (this.respawn)\n        {\n            this.pos = new Vec3 (this.node.position.x, this.node.position.y, this.node.position.z);\n            this.pos.x = this.arrayOfPositionToSpawn[Math.floor(Math.random() * this.arrayOfPositionToSpawn.length)];\n            this.pos.y = this.height;\n            this.node.position = this.pos;\n\n            this.respawn = false;\n            this.curSpawnTime = 0;\n        }\n\n        if (this.curSpawnTime > this.spawnTime)\n        {\n            this.currentPos = new Vec3 (this.node.position.x, this.node.position.y, this.node.position.z);\n            this.currentPos.y -= this.speed * deltaTime;\n            this.node.position = this.currentPos;\n    \n            if (this.currentPos.y < this.offScreen)\n            {\n                this.Respawn();\n                this.curSpawnTime = 0;\n                this.spawnTime+=2;\n            }\n        }\n    }\n\n    Respawn()\n    {\n        this.respawn = true;        \n    }\n}\n"]}