{"version":3,"sources":["file:///Users/lamngo/Desktop/Git/cocos2D-redblue/assets/Script/InputController.ts"],"names":["_decorator","Component","Node","KeyCode","SystemEventType","systemEvent","GameManager","PlayerController","ccclass","property","InputController","start","on","KEY_DOWN","onKeyDown","node","EventType","TOUCH_START","event","Instance","InputForMove","direction","UpdateScores","AddProgressBar","AddScore","keyCode","ARROW_LEFT","KEY_A","ARROW_RIGHT","KEY_D"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,O,OAAAA,O;AAAwBC,MAAAA,e,OAAAA,e;AAAiBC,MAAAA,W,OAAAA,W;;AACtEC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,gB,iBAAAA,gB;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;iCAGjBU,e,WADZF,OAAO,CAAC,iBAAD,C,oCAAR,MACaE,eADb,SACqCT,SADrC,CAC+C;AAAA;AAAA;;AAAA;AAAA;;AAO3CU,QAAAA,KAAK,GAAG;AACJN,UAAAA,WAAW,CAACO,EAAZ,CAAeR,eAAe,CAACS,QAA/B,EAAyC,KAAKC,SAA9C,EAAyD,IAAzD;AACA,eAAKC,IAAL,CAAUH,EAAV,CAAaV,IAAI,CAACc,SAAL,CAAeC,WAA5B,EAA0CC,KAAD,IAAgB;AACrD;AAAA;AAAA,sDAAiBC,QAAjB,CAA0BC,YAA1B,CAAuC,KAAKC,SAA5C;AACA,iBAAKC,YAAL;AAEH,WAJD,EAIG,IAJH;AAKH;;AAEOA,QAAAA,YAAY,GAAG;AACnB;AAAA;AAAA,0CAAYH,QAAZ,CAAqBI,cAArB;AACA;AAAA;AAAA,0CAAYJ,QAAZ,CAAqBK,QAArB,CAA8B,CAA9B;AACH;;AAEDV,QAAAA,SAAS,CAACI,KAAD,EAAuB;AAC5B;AAEA,kBAAQA,KAAK,CAACO,OAAd;AACI,iBAAKtB,OAAO,CAACuB,UAAb;AACA,iBAAKvB,OAAO,CAACwB,KAAb;AACI;AAAA;AAAA,wDAAiBR,QAAjB,CAA0BC,YAA1B,CAAuC,CAAC,CAAxC;AACA,mBAAKE,YAAL;AACA;;AACJ,iBAAKnB,OAAO,CAACyB,WAAb;AACA,iBAAKzB,OAAO,CAAC0B,KAAb;AACI;AAAA;AAAA,wDAAiBV,QAAjB,CAA0BC,YAA1B,CAAuC,CAAvC;AACA,mBAAKE,YAAL;AACA;AAVR;AAYH;;AApC0C,O,oFAI1Cb,Q;;;;;iBAC0B,C","sourcesContent":["\nimport { _decorator, Component, Node, KeyCode, EventKeyboard, SystemEventType, systemEvent } from 'cc';\nimport { GameManager } from './GameManager';\nimport { PlayerController } from './PlayerController';\nconst { ccclass, property } = _decorator;\n\n@ccclass('InputController')\nexport class InputController extends Component {\n\n    //public myScore: number;\n\n    @property\n    public direction: number = 0;\n\n    start() {\n        systemEvent.on(SystemEventType.KEY_DOWN, this.onKeyDown, this);\n        this.node.on(Node.EventType.TOUCH_START, (event: any) => {\n            PlayerController.Instance.InputForMove(this.direction);\n            this.UpdateScores();\n\n        }, this);\n    }\n\n    private UpdateScores() {\n        GameManager.Instance.AddProgressBar();\n        GameManager.Instance.AddScore(1);\n    }\n\n    onKeyDown(event: EventKeyboard) {\n        // if (GameController.Instance.isLost || GameController.Instance.isPaused) return;\n\n        switch (event.keyCode) {\n            case KeyCode.ARROW_LEFT:\n            case KeyCode.KEY_A:\n                PlayerController.Instance.InputForMove(-1);\n                this.UpdateScores();\n                break;\n            case KeyCode.ARROW_RIGHT:\n            case KeyCode.KEY_D:\n                PlayerController.Instance.InputForMove(1);\n                this.UpdateScores();\n                break;\n        }\n    }\n\n}\n"]}