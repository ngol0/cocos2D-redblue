{"version":3,"sources":["file:///Users/lamngo/Desktop/Cocos/RedandBlue_edited/assets/Script/SpawnController/EnemySpawner.ts"],"names":["_decorator","Component","PoolManager","ccclass","property","EnemySpawner","start","_arrayOfTimeBetweenSpawn","_arrayOfSprites","SetSpawningElements","_timeBetweenSpawn","Math","floor","random","length","_spritesToChoose","update","deltaTime","_curSpawnTime","Instance","CreateRedEnemy","node","CreateStoneEnemy","CreatePlayer"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACZC,MAAAA,W,iBAAAA,W;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;8BAGjBK,Y,WADZF,OAAO,CAAC,cAAD,C,yBAAR,MACaE,YADb,SACkCJ,SADlC,CAC4C;AAAA;AAAA;;AAAA,4DAGK,EAHL;;AAAA,mDAIJ,EAJI;;AAAA;;AAAA;;AAAA,iDASR,CATQ;AAAA;;AAWxC;AAEAK,QAAAA,KAAK,GAAI;AACL;AAEA,eAAKC,wBAAL,GAAgC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAhC,CAHK,CAGoD;;AACzD,eAAKC,eAAL,GAAuB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAvB,CAJK,CAImC;;AAExC,eAAKC,mBAAL;AAEH;;AAEOA,QAAAA,mBAAmB,GAAG;AAC1B;AACA,eAAKC,iBAAL,GAAyB,KAAKH,wBAAL,CAA8BI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKN,wBAAL,CAA8BO,MAAzD,CAA9B,CAAzB,CAF0B,CAI1B;;AACA,eAAKC,gBAAL,GAAwB,KAAKP,eAAL,CAAqBG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKL,eAAL,CAAqBM,MAAhD,CAArB,CAAxB;AACH;;AAEDE,QAAAA,MAAM,CAAEC,SAAF,EAAqB;AAEvB;AACA;AACA;AAEI,eAAKC,aAAL,IAAsBD,SAAtB;;AAEA,cAAI,KAAKC,aAAL,IAAsB,KAAKR,iBAA/B,EACA;AACI,gBAAI,KAAKK,gBAAL,IAAyB,CAA7B,EACA;AACI;AAAA;AAAA,8CAAYI,QAAZ,CAAqBC,cAArB,CAAoC,KAAKC,IAAzC;AACH,aAHD,MAIK,IAAI,KAAKN,gBAAL,IAAyB,CAA7B,EACL;AACI;AAAA;AAAA,8CAAYI,QAAZ,CAAqBG,gBAArB,CAAsC,KAAKD,IAA3C;AACH,aAHI,MAIA,IAAI,KAAKN,gBAAL,IAAyB,CAA7B,EACL;AACI;AAAA;AAAA,8CAAYI,QAAZ,CAAqBI,YAArB,CAAkC,KAAKF,IAAvC;AACH;;AAED,iBAAKH,aAAL,GAAqB,CAArB;AACA,iBAAKT,mBAAL;AACH,WAzBkB,CA0BvB;;AAEH;;AA3DuC,O","sourcesContent":["\nimport { _decorator, Component, Node, Prefab, instantiate, Vec3, find } from 'cc';\nimport { PoolManager } from './PoolManager';\nconst { ccclass, property } = _decorator;\n \n@ccclass('EnemySpawner')\nexport class EnemySpawner extends Component {\n\n    //----FOR ENEMIES----//\n    private _arrayOfTimeBetweenSpawn: number[] = []; \n    private _arrayOfSprites: number[] = [];\n\n    private _spritesToChoose;\n\n    private _timeBetweenSpawn: number;\n    private _curSpawnTime: number = 0; \n\n    //private boss: BossSpawner;\n\n    start () {\n        //this.boss = this.node.parent.getComponent(BossSpawner);\n\n        this._arrayOfTimeBetweenSpawn = [1, 2, 3, 4, 5];         //number of blocks to spawn in column\n        this._arrayOfSprites = [1, 2, 3];       //pick a number and the sprites to spawn accordingly\n\n        this.SetSpawningElements();\n\n    }\n\n    private SetSpawningElements() {\n        //time\n        this._timeBetweenSpawn = this._arrayOfTimeBetweenSpawn[Math.floor(Math.random() * this._arrayOfTimeBetweenSpawn.length)];\n\n        //sprites\n        this._spritesToChoose = this._arrayOfSprites[Math.floor(Math.random() * this._arrayOfSprites.length)];\n    }\n\n    update (deltaTime: number) {\n\n        //spawn obstacles - first come first serve\n        //if (this.boss.spawnEnem)\n        //{\n\n            this._curSpawnTime += deltaTime;\n    \n            if (this._curSpawnTime >= this._timeBetweenSpawn)\n            {\n                if (this._spritesToChoose == 1)\n                {\n                    PoolManager.Instance.CreateRedEnemy(this.node);\n                }\n                else if (this._spritesToChoose == 2)\n                {\n                    PoolManager.Instance.CreateStoneEnemy(this.node);\n                }\n                else if (this._spritesToChoose == 3)\n                {\n                    PoolManager.Instance.CreatePlayer(this.node);\n                }\n\n                this._curSpawnTime = 0;\n                this.SetSpawningElements();             \n            }\n        //}\n        \n    }\n}\n"]}