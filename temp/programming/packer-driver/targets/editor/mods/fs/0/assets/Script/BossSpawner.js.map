{"version":3,"sources":["file:///Users/lamngo/Desktop/Cocos/RedandBlue_edited/assets/Script/BossSpawner.ts"],"names":["_decorator","Component","Prefab","instantiate","Vec3","Boss","ccclass","property","BossSpawner","type","start","SpawnBoss","update","deltaTime","curTimeForBoss","timeTilBoss","spawnEnem","spawnBoss","myBoss","getComponent","Move","boss","parent","node","position","SpawnEnem"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;;AAClDC,MAAAA,I,iBAAAA,I;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;6BAGjBQ,W,WADZF,OAAO,CAAC,aAAD,C,UAIHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,oCAJb,MACaM,WADb,SACiCP,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,+CAQT,EARS;;AAAA,kDASN,CATM;;AAAA,6CAWX,KAXW;;AAAA,6CAYX,IAZW;AAAA;;AAcvCS,QAAAA,KAAK,GAAI;AAEN,eAAKC,SAAL;AAEF;;AAEDC,QAAAA,MAAM,CAAEC,SAAF,EAAqB;AAEtB;AACA,eAAKC,cAAL,IAAuBD,SAAvB,CAHsB,CAKtB;;AACA,cAAI,KAAKC,cAAL,IAAuB,KAAKC,WAAhC,EACA;AACI,iBAAKC,SAAL,GAAiB,KAAjB;AACA,iBAAKC,SAAL,GAAiB,IAAjB;AACH,WAVqB,CAYtB;;;AACA,cAAI,KAAKA,SAAT,EACA;AACI,iBAAKC,MAAL,CAAYC,YAAZ;AAAA;AAAA,8BAA+BC,IAA/B,CAAoCP,SAApC;AACH;AAEL,SAtCsC,CAwCvC;;;AACAF,QAAAA,SAAS,GACT;AACI,eAAKO,MAAL,GAAcf,WAAW,CAAC,KAAKkB,IAAN,CAAzB;AACA,eAAKH,MAAL,CAAYI,MAAZ,GAAqB,KAAKC,IAA1B;AACA,eAAKL,MAAL,CAAYM,QAAZ,GAAuB,IAAIpB,IAAJ,CAAS,CAAT,EAAW,IAAX,EAAgB,CAAhB,CAAvB;AACH,SA9CsC,CAgDvC;;;AACAqB,QAAAA,SAAS,GACT;AACI,eAAKT,SAAL,GAAiB,IAAjB;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACA,eAAKH,cAAL,GAAsB,CAAtB;AACH;;AAtDsC,O;;;;;iBAIZ,I","sourcesContent":["\nimport { _decorator, Component, Node, Prefab, instantiate, Vec3, find } from 'cc';\nimport { Boss } from './Boss';\nconst { ccclass, property } = _decorator;\n \n@ccclass('BossSpawner')\nexport class BossSpawner extends Component {\n\n     //----FOR BOSS----//\n    @property({type: Prefab})\n    public boss: Prefab|null = null;\n\n    private myBoss: Node;\n\n    private timeTilBoss: number = 20;\n    private curTimeForBoss: number = 0;\n\n    public spawnBoss: boolean = false;\n    public spawnEnem: boolean = true;\n\n    start () {\n\n       this.SpawnBoss();\n\n    }\n\n    update (deltaTime: number) {\n\n         //count down til boss appears\n         this.curTimeForBoss += deltaTime;\n\n         //if time for boss to appear - spawn boss and stop spawn enemies\n         if (this.curTimeForBoss >= this.timeTilBoss)\n         {\n             this.spawnEnem = false;\n             this.spawnBoss = true;\n         }\n\n         //boss starts to appear and move\n         if (this.spawnBoss)\n         {\n             this.myBoss.getComponent(Boss).Move(deltaTime);\n         }\n \n    }\n\n    //spawn boss at the start of game\n    SpawnBoss()\n    {\n        this.myBoss = instantiate(this.boss);\n        this.myBoss.parent = this.node;\n        this.myBoss.position = new Vec3(0,1100,0);\n    }\n\n    //respawn enemies after boss is beaten\n    SpawnEnem()\n    {\n        this.spawnEnem = true;\n        this.spawnBoss = false;\n        this.curTimeForBoss = 0;\n    }\n}"]}