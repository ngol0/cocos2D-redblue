{"version":3,"sources":["file:///Users/lamngo/Desktop/Cocos/RedandBlue_edited/assets/Script/SpeedIcon.ts"],"names":["_decorator","Component","Node","Contact2DType","Collider2D","IconSpawn","Player","ccclass","property","SpeedIcon","type","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","selfCollider","otherCollider","contact","node","name","isActive","player","SetFasterSpeed","Respawn","update","deltaTime","curActiveTime","activeTime","SettNormalSpeed"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,U,OAAAA,U;;AAC5CC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,M,iBAAAA,M;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;2BAIjBS,S,WADZF,OAAO,CAAC,WAAD,C,UAGHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER;AAAP,OAAD,C,oCAHb,MACaO,SADb,SAC+BR,SAD/B,CACyC;AAAA;AAAA;;AAAA;;AAAA,8CAKR,CALQ;;AAAA,iDAML,CANK;;AAAA,4CAQT,KARS;AAAA;;AAUrCU,QAAAA,KAAK,GAAI;AACL;AACA,cAAIC,QAAQ,GAAG,KAAKC,YAAL,CAAkBT,UAAlB,CAAf;;AACA,cAAIQ,QAAJ,EAAc;AACVA,YAAAA,QAAQ,CAACE,EAAT,CAAYX,aAAa,CAACY,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AACH;AACJ;;AAEDA,QAAAA,cAAc,CAACC,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EACd;AACI,cAAID,aAAa,CAACE,IAAd,CAAmBC,IAAnB,IAA2B,QAA/B,EACA;AACI;AACA,iBAAKC,QAAL,GAAgB,IAAhB;AAEA,iBAAKC,MAAL,CAAYV,YAAZ;AAAA;AAAA,kCAAiCW,cAAjC;AACA,iBAAKJ,IAAL,CAAUP,YAAV;AAAA;AAAA,wCAAkCY,OAAlC;AACH,WAPD,MASA;AACI,iBAAKL,IAAL,CAAUP,YAAV;AAAA;AAAA,wCAAkCY,OAAlC;AACH;AACJ;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AAEtB,cAAI,CAAC,KAAKL,QAAV,EAAoB;AAAE;AAAS;;AAE/B,eAAKM,aAAL,IAAsBD,SAAtB;;AAEA,cAAI,KAAKC,aAAL,GAAqB,KAAKC,UAA9B,EACA;AACI,iBAAKN,MAAL,CAAYV,YAAZ;AAAA;AAAA,kCAAiCiB,eAAjC;AACA,iBAAKR,QAAL,GAAgB,KAAhB;AACA,iBAAKM,aAAL,GAAqB,CAArB;AACH;AACJ;;AA9CoC,O;;;;;iBAGV,I","sourcesContent":["\nimport { _decorator, Component, Node, Contact2DType, Collider2D, IPhysics2DContact } from 'cc';\nimport { IconSpawn } from './IconSpawn';\nimport { Player } from './Player';\nconst { ccclass, property } = _decorator;\n\n \n@ccclass('SpeedIcon')\nexport class SpeedIcon extends Component {\n\n    @property({type: Node})\n    public player: Node|null = null;\n\n    private activeTime: number = 5;\n    private curActiveTime: number = 0;\n\n    private isActive: boolean = false;\n\n    start () {\n        //collider\n        let collider = this.getComponent(Collider2D);\n        if (collider) {\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        }\n    }\n\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) \n    {\n        if (otherCollider.node.name == \"Player\")\n        {\n            //fast spped\n            this.isActive = true;\n\n            this.player.getComponent(Player).SetFasterSpeed();\n            this.node.getComponent(IconSpawn).Respawn();\n        }\n        else\n        {\n            this.node.getComponent(IconSpawn).Respawn();\n        }\n    }\n\n    update(deltaTime: number) {\n\n        if (!this.isActive) { return; }\n    \n        this.curActiveTime += deltaTime;\n\n        if (this.curActiveTime > this.activeTime)\n        {\n            this.player.getComponent(Player).SettNormalSpeed();\n            this.isActive = false;\n            this.curActiveTime = 0;\n        }\n    }  \n\n}\n\n"]}