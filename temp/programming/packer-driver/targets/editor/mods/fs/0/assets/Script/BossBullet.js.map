{"version":3,"sources":["file:///Users/lamngo/Desktop/Git/cocos2D-redblue/assets/Script/BossBullet.ts"],"names":["_decorator","Collider2D","Contact2DType","director","PoolObjects","ccclass","property","BossBullet","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","selfCollider","otherCollider","contact","tag","loadScene","node","name","_isHit","update","deltaTime","MoveWithSpeed","BackToPool"],"mappings":";;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAA6BC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,a,OAAAA,a;AAAkCC,MAAAA,Q,OAAAA,Q;;AAC3EC,MAAAA,W,iBAAAA,W;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;4BAGjBO,U,WADZF,OAAO,CAAC,YAAD,C,gBAAR,MACaE,UADb;AAAA;AAAA,sCAC4C;AAExCC,QAAAA,KAAK,GAAI;AACL;AACA,cAAIC,QAAQ,GAAG,KAAKC,YAAL,CAAkBT,UAAlB,CAAf;;AACA,cAAIQ,QAAJ,EAAc;AACVA,YAAAA,QAAQ,CAACE,EAAT,CAAYT,aAAa,CAACU,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AACH;AACJ,SARuC,CAUxC;;;AACAA,QAAAA,cAAc,CAACC,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EACd;AACI,cAAID,aAAa,CAACE,GAAd,IAAqB,CAAzB,EACA;AACI;AACAd,YAAAA,QAAQ,CAACe,SAAT,CAAmB,OAAnB;AACH;;AACD,cAAIH,aAAa,CAACI,IAAd,CAAmBC,IAAnB,IAA2B,YAA/B,EACA;AACI,iBAAKC,MAAL,GAAc,IAAd;AACH;AACJ;;AAEDC,QAAAA,MAAM,CAAEC,SAAF,EAAqB;AAEvB,eAAKC,aAAL,CAAmBD,SAAnB,EAA8B,GAA9B;;AACA,cAAI,KAAKF,MAAT,EACA;AACI,iBAAKI,UAAL;AACH;AAEJ;;AAhCuC,O","sourcesContent":["\nimport { _decorator, Component, Node, Collider2D, Contact2DType, IPhysics2DContact, director } from 'cc';\nimport { PoolObjects } from './PoolObjects';\nconst { ccclass, property } = _decorator;\n \n@ccclass('BossBullet')\nexport class BossBullet extends PoolObjects {\n\n    start () {\n        //collider\n        let collider = this.getComponent(Collider2D);\n        if (collider) {\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        }\n    }\n\n    //when bullet collides with enemies\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) \n    {\n        if (otherCollider.tag == 5)\n        {\n            //destroy bullet\n            director.loadScene('scene');\n        }\n        if (otherCollider.node.name == \"OutOfBound\")\n        {\n            this._isHit = true;\n        }\n    }\n\n    update (deltaTime: number) {\n\n        this.MoveWithSpeed(deltaTime, 400);\n        if (this._isHit)\n        {\n            this.BackToPool();\n        }\n       \n    }\n}\n"]}