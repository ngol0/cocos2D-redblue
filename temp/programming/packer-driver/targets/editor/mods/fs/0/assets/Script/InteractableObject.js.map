{"version":3,"sources":["file:///Users/lamngo/Desktop/Git/cocos2D-redblue/assets/Script/InteractableObject.ts"],"names":["_decorator","Component","Vec3","ccclass","property","InteractableObject","Moving","deltaTime","_currentPos","node","position","x","y","z","SPEED","movingDirection","MoveWithSpeed","speed"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA4CC,MAAAA,I,OAAAA,I;;;;;;;OAC3D;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;oCAIRK,kB,WADrBF,OAAO,CAAC,oBAAD,C,8CAAR,MACsBE,kBADtB,SACiDJ,SADjD,CAC2D;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAShDK,QAAAA,MAAM,CAACC,SAAD,EAAoB;AAC7B,eAAKC,WAAL,GAAmB,IAAIN,IAAJ,CAAS,KAAKO,IAAL,CAAUC,QAAV,CAAmBC,CAA5B,EAA+B,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,CAAlD,EAAqD,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,CAAxE,CAAnB;AACA,eAAKL,WAAL,CAAiBI,CAAjB,IAAsBP,kBAAkB,CAACS,KAAnB,GAA2B,KAAKC,eAAhC,GAAkDR,SAAxE;AACA,eAAKE,IAAL,CAAUC,QAAV,GAAqB,KAAKF,WAA1B;AACH;;AAEMQ,QAAAA,aAAa,CAACT,SAAD,EAAoBU,KAApB,EACpB;AACI,eAAKT,WAAL,GAAmB,IAAIN,IAAJ,CAAS,KAAKO,IAAL,CAAUC,QAAV,CAAmBC,CAA5B,EAA+B,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,CAAlD,EAAqD,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,CAAxE,CAAnB;AACA,eAAKL,WAAL,CAAiBI,CAAjB,IAAsBK,KAAK,GAAG,KAAKF,eAAb,GAA+BR,SAArD;AACA,eAAKE,IAAL,CAAUC,QAAV,GAAqB,KAAKF,WAA1B;AACH;;AApBsD,O,oCAOtB,G,2FAHhCJ,Q;;;;;iBACmC,C","sourcesContent":["\nimport { _decorator, Component, Node, Collider2D, Contact2DType, Vec3, IPhysics2DContact } from 'cc';\nconst { ccclass, property } = _decorator;\n\n \n@ccclass('InteractableObject')\nexport abstract class InteractableObject extends Component {\n\n    protected _currentPos: Vec3;\n\n    @property\n    protected movingDirection: number = 1;\n\n    protected static SPEED: number = 200;\n\n    public Moving(deltaTime: number) {\n        this._currentPos = new Vec3(this.node.position.x, this.node.position.y, this.node.position.z);\n        this._currentPos.y -= InteractableObject.SPEED * this.movingDirection * deltaTime;\n        this.node.position = this._currentPos;\n    }\n\n    public MoveWithSpeed(deltaTime: number, speed: number)\n    {\n        this._currentPos = new Vec3(this.node.position.x, this.node.position.y, this.node.position.z);\n        this._currentPos.y -= speed * this.movingDirection * deltaTime;\n        this.node.position = this._currentPos;\n    }\n}\n"]}